{"version":3,"sources":["views/accountsSearch/AccountDisplay.tsx"],"names":["AccountDisplay","props","dispatch","useAppDispatch","alert","useAlert","userId","match","params","useEffect","actions","userRequest","userData","useAppSelector","state","user","data","accounts","isLoading","fetching","error","show","clearError","items","fields","itemsPerPage","pagination"],"mappings":"kHAAA,2DAiDeA,UAxCQ,SAACC,GAA6B,IAAD,IAC5CC,EAAWC,cACXC,EAAQC,cACRC,EAAM,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAAOM,aAAV,iBAAG,EAAcC,cAAjB,aAAG,EAAsBF,OACrCG,qBAAU,WACRP,EAASQ,IAAQC,YAAY,CAAEL,cAC9B,CAACA,EAAQJ,IACZ,IAAMU,EAAWC,aAAe,SAAAC,GAAW,OAA0B,MAAnBA,EAAMC,KAAKC,KAAeF,EAAMC,KAAKC,KAAO,CAAEV,SAAQW,SAAU,OAC5GC,EAAYL,aAAe,SAAAC,GAAK,OAAIA,EAAMC,KAAKI,YAC/CC,EAAQP,aAAe,SAAAC,GAAW,OAA2B,MAApBA,EAAMC,KAAKK,MAAgBN,EAAMC,KAAKK,MAAQ,QAC7FX,qBAAU,WACM,OAAVW,IACFhB,EAAMiB,KAAKD,GACXlB,EAASQ,IAAQY,iBAElB,CAACF,IAEJ,OACE,mCACE,eAAC,IAAD,WACE,eAAC,IAAD,6BACWR,QADX,IACWA,OADX,EACWA,EAAUN,UAErB,cAAC,IAAD,UACGY,EAAY,UAET,cAAC,IAAD,CACEK,MAAK,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAUK,SACjBO,OAZC,CAAC,KAAM,OAAQ,WAahBC,aAAc,GACdC,YAAU","file":"static/js/3.ea6a2b16.chunk.js","sourcesContent":["import {\r\n  CCard,\r\n  CCardBody, CCardHeader, CDataTable\r\n} from '@coreui/react'\r\nimport { useEffect } from 'react'\r\nimport { useAlert } from 'react-alert'\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks'\r\nimport { actions } from '../../redux/reducers/user'\r\n\r\nconst AccountDisplay = (props: any): JSX.Element => {\r\n  const dispatch = useAppDispatch()\r\n  const alert = useAlert()\r\n  const userId = props?.match?.params?.userId\r\n  useEffect(() => {\r\n    dispatch(actions.userRequest({ userId }))\r\n  }, [userId, dispatch])\r\n  const userData = useAppSelector(state => { return state.user.data != null ? state.user.data : { userId, accounts: [] } })\r\n  const isLoading = useAppSelector(state => state.user.fetching)\r\n  const error = useAppSelector(state => { return state.user.error != null ? state.user.error : null })\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      alert.show(error)\r\n      dispatch(actions.clearError())\r\n    }\r\n  }, [error])\r\n  const fields = ['id', 'name', 'balance']\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader>\r\n          UserId: {userData?.userId}\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          {isLoading ? 'Loading'\r\n            : (\r\n              <CDataTable\r\n                items={userData?.accounts}\r\n                fields={fields}\r\n                itemsPerPage={10}\r\n                pagination\r\n              />\r\n            )}\r\n\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AccountDisplay\r\n"],"sourceRoot":""}